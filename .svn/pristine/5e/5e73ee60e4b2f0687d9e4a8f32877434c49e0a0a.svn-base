#pragma checksum "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "148503535d968d601dc659e5f48dbd5cd663b2ce"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 2 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using TIGE;

#line default
#line hidden
#line 3 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using TIGE.Core;

#line default
#line hidden
#line 4 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using TIGE.Core.Models;

#line default
#line hidden
#line 5 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using TIGE.Models.Constants;

#line default
#line hidden
#line 6 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using Elect.Web.IUrlHelperUtils;

#line default
#line hidden
#line 7 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using TIGE.Areas.Portal.Controllers;

#line default
#line hidden
#line 10 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using Elect.Web.DataTable;

#line default
#line hidden
#line 11 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using Elect.Web.DataTable.Models.Column;

#line default
#line hidden
#line 14 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#line 15 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc;

#line default
#line hidden
#line 16 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc.Rendering;

#line default
#line hidden
#line 17 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#line 18 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http.Extensions;

#line default
#line hidden
#line 1 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
using Elect.Core.ObjUtils;

#line default
#line hidden
#line 2 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
using TIGE.Contract.Service;

#line default
#line hidden
#line 3 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
using TIGE.Core.Share.Utils;

#line default
#line hidden
#line 4 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
using TIGE.Core.Utils;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"148503535d968d601dc659e5f48dbd5cd663b2ce", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"149de2803d438138873c3f8fef1be7010fc8daea", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<TIGE.Core.Share.Models.DashboardModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 7 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home";
    var config = ConfigurationService.GetConfig();
    var tigeHistory = ConfigurationService.GetTigeHistory().ToList();
    var month = DateTime.Now.Month + config.TIGEChartRange;

    var latesPrice = 0d;
    if (tigeHistory.Count > 1)
    {
        var price = tigeHistory.OrderByDescending(x => x.CreatedTime).ToArray();
        latesPrice = price[1].Price;
    }


    var percent = Math.Round( (config.TokenPrice - latesPrice) / latesPrice * 100, 2);
    var color = percent > 0 ? "badge-success" : "badge-danger";
    var arrow = percent > 0 ? "la-arrow-up" : "la-arrow-down";


#line default
#line hidden
            WriteLiteral("\r\n<style>\r\n    #chartdiv {\r\n        width: 100%;\r\n        height: 400px;\r\n    }\r\n\r\n    .chart-label {\r\n        padding-left: 45%;\r\n        color: black;\r\n        padding-top: 15px;\r\n        font-size: 18pt;\r\n    }\r\n\r\n    ");
            WriteLiteral("@media (max-width: 800px) {\r\n        .chart-label {\r\n            padding-left: 25%;\r\n        }\r\n    }\r\n\r\n    ");
            WriteLiteral("@media (max-width: 450px) {\r\n        .chart-label {\r\n            padding-left: 15%;\r\n        }\r\n    }\r\n\r\n    ");
            WriteLiteral(@"@media (max-width: 450px) {
        .chart-label {
            padding-left: 15%;
            font-size: 14pt;
        }
    }
</style>

<div class=""pt-120 pb-120"">
    <div class=""container"">
        <div class=""row justify-content-center"">
            <div class=""col-lg-12"">
                <div class=""row mb-none-30"">

");
#line 66 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                     if (string.IsNullOrWhiteSpace(LoggedInUser.Current.WalletId))
                    {

#line default
#line hidden
            WriteLiteral(@"                    <div class=""col-xl-12 col-sm-12 mb-30"">
                        <div class=""d-widget d-flex flex-wrap"">
                            <div class=""col-8"">
                                <h4 class=""currency-amount"">
                                    You need update full profile to use full functions!
                                </h4>
                            </div>
                            <div class=""col-4"">

                            </div>
                        </div><!-- d-widget-two end -->
                    </div>
");
#line 80 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                    }

#line default
#line hidden
            WriteLiteral(@"
                    <div class=""col-xl-4 col-sm-6 mb-30"">
                        <div class=""d-widget d-flex flex-wrap"">
                            <div class=""col-8"">
                                <span class=""caption"">Balance</span>
                                <h4 class=""currency-amount"">
                                    $ ");
#line 87 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                                  Write(LoggedInUser.Current.WalletBalance > 0 ?
                                            LoggedInUser.Current.WalletBalance.ToString("##,###,###,###0.###")
                                            : "0");

#line default
#line hidden
            WriteLiteral(@"
                                </h4>
                            </div>
                            <div class=""col-4"">
                                <div class=""icon ml-auto"">
                                    <i class=""las la-dollar-sign""></i>
                                </div>
                            </div>
                        </div><!-- d-widget-two end -->
                    </div>
                    <div class=""col-xl-4 col-sm-6 mb-30"">
                        <div class=""d-widget d-flex flex-wrap"">
                            <div class=""col-8"">
                                <span class=""caption"">Total Slots</span>
                                <h4 class=""currency-amount"">");
#line 103 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                                                       Write(Model.TotalSlots);

#line default
#line hidden
            WriteLiteral(@"</h4>
                            </div>
                            <div class=""col-4"">
                                <div class=""icon ml-auto"">
                                    <i class=""las la-wallet""></i>
                                </div>
                            </div>
                        </div><!-- d-widget-two end -->
                    </div>
                    <div class=""col-xl-4 col-sm-6 mb-30"">
                        <div class=""d-widget d-flex flex-wrap"">
                            <div class=""col-8"">
                                <span class=""caption"">Total Tokens (TIGE)</span>
                                <h4 class=""currency-amount"">
                                    ");
#line 117 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                               Write(Model.TotalToken);

#line default
#line hidden
            WriteLiteral("\r\n                                    <span style=\"font-size: 10pt;\">\r\n");
#line 119 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                                          
                                            var totalTokenPrice = Model.TotalToken > 0 ? (Model.TotalToken * config.TokenPrice) : 0;
                                            var rounded = Math.Round(totalTokenPrice, 4);
                                            var text = rounded.ToString("##,###,###,###0.###");
                                        

#line default
#line hidden
            WriteLiteral("                                        ($ ");
#line 124 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                                      Write(text);

#line default
#line hidden
            WriteLiteral(@")
                                    </span>
                            </h4>
                        </div>
                        <div class=""col-4"">
                            <div class=""icon ml-auto"">
                                <i class=""las la-cubes ""></i>
                            </div>
                        </div>
                    </div><!-- d-widget-two end -->
                </div>
                <div class=""col-xl-4 col-sm-6 mb-30"">
                    <div class=""d-widget d-flex flex-wrap"">
                        <div class=""col-8"">
                            <span class=""caption"">Total Commission</span>
                            <h4 class=""currency-amount"">$ ");
#line 139 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                                                     Write(Model.TotalCommission);

#line default
#line hidden
            WriteLiteral(@"</h4>
                        </div>
                        <div class=""col-4"">
                            <div class=""icon ml-auto"">
                                <i class=""las la-credit-card""></i>
                            </div>
                        </div>
                    </div><!-- d-widget-two end -->
                </div>

                <div class=""col-xl-8 col-sm-12 mb-30 non-menu-toggle-li"">
                    <div class=""d-widget d-flex flex-wrap"">
                        <div class=""col-8"">
                            <span class=""caption"">Register Referral Link</span>
                            <h4 class=""currency-amount"">");
#line 153 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                                                    Write(SystemHelper.Setting.ReferFormatLink.Replace("{{code}}", LoggedInUser.Current.Code));

#line default
#line hidden
            WriteLiteral("</h4>\r\n                            <input type=\"hidden\"");
            BeginWriteAttribute("value", " value=\"", 6460, "\"", 6554, 1);
#line 154 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
WriteAttributeValue("", 6468, SystemHelper.Setting.ReferFormatLink.Replace("{{code}}", LoggedInUser.Current.Code), 6468, 86, false);

#line default
#line hidden
            EndWriteAttribute();
            WriteLiteral(@" id=""ref-link"" />
                        </div>
                        <div class=""col-4"">
                            <div class=""icon ml-auto"" style=""cursor: pointer"">
                                <i class=""las la-user-friends"" onclick=""copyTextToClipboard('#ref-link')""></i>
                            </div>
                        </div>
                    </div><!-- d-widget-two end -->
                </div>

                <div class=""col-xl-8 col-sm-12 mb-30 menu-toggle-li"">
                    <div class=""d-widget d-flex flex-wrap"">
                        <div class=""col-8"">
                            <span class=""caption"">Register Referral Link</span>
                            <h4 class=""currency-amount"" onclick=""copyTextToClipboard('#ref-link')"">");
#line 168 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                                                                                               Write(SystemHelper.Setting.ReferFormatLink.Replace("{{code}}", LoggedInUser.Current.Code));

#line default
#line hidden
            WriteLiteral("</h4>\r\n                            <input type=\"hidden\"");
            BeginWriteAttribute("value", " value=\"", 7488, "\"", 7582, 1);
#line 169 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
WriteAttributeValue("", 7496, SystemHelper.Setting.ReferFormatLink.Replace("{{code}}", LoggedInUser.Current.Code), 7496, 86, false);

#line default
#line hidden
            EndWriteAttribute();
            WriteLiteral(" id=\"ref-link\" />\r\n                        </div>\r\n                    </div><!-- d-widget-two end -->\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-50\">\r\n                <div class=\"col-lg-12\">\r\n                    <div");
            BeginWriteAttribute("class", " class=\"", 7833, "\"", 7841, 0);
            EndWriteAttribute();
            WriteLiteral(" style=\"background-color: aliceblue\">\r\n                        <div class=\"row align-content-center chart-label\">\r\n                            <strong>  Token TIGE $");
#line 178 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                                              Write(config.TokenPrice.ToString("#,###,###0.#####"));

#line default
#line hidden
            WriteLiteral("   </strong>\r\n\r\n                            <span");
            BeginWriteAttribute("class", " class=\"", 8105, "\"", 8125, 2);
            WriteAttributeValue("", 8113, "badge", 8113, 5, true);
#line 180 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
WriteAttributeValue(" ", 8118, color, 8119, 6, false);

#line default
#line hidden
            EndWriteAttribute();
            WriteLiteral(" style=\"margin-left: 15px; padding-top: 12px;\">\r\n                                <i");
            BeginWriteAttribute("class", " class=\"", 8209, "\"", 8227, 2);
            WriteAttributeValue("", 8217, "las", 8217, 3, true);
#line 181 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
WriteAttributeValue(" ", 8220, arrow, 8221, 6, false);

#line default
#line hidden
            EndWriteAttribute();
            WriteLiteral("></i>\r\n                                ");
#line 182 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                           Write(percent);

#line default
#line hidden
            WriteLiteral(" %\r\n                            </span>\r\n                        </div>\r\n\r\n\r\n");
            WriteLiteral("                        <div id=\"chartdiv\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
                WriteLiteral(@"
    <script src=""https://cdn.amcharts.com/lib/4/core.js""></script>
    <script src=""https://cdn.amcharts.com/lib/4/charts.js""></script>
    <script src=""https://cdn.amcharts.com/lib/4/themes/animated.js""></script>

    <script>

        var dataChart = JSON.parse('");
#line 207 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                               Write(Html.Raw(tigeHistory.ToJsonString()));

#line default
#line hidden
                WriteLiteral("\');\r\n        var lengthChart = ");
#line 208 "D:\STS\Freelance\Long-Coin\source\tige_system\src\Web\TIGE\Views\Home\Index.cshtml"
                     Write(month);

#line default
#line hidden
                WriteLiteral(@";


        $(dataChart).each(function(idx, item) {
            var date = new Date(item.createdTime);
            item.Time = date;
        });

        am4core.ready(function () {

            am4core.useTheme(am4themes_animated);
            var chart = am4core.create(""chartdiv"", am4charts.XYChart);

            chart.data = dataChart;
            chart.dateFormatter.utc = true;


            var topContainer = chart.chartContainer.createChild(am4core.Container);
            topContainer.layout = ""absolute"";
            topContainer.toBack();
            topContainer.paddingBottom = 15;
            topContainer.width = am4core.percent(100);



            var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
            dateAxis.gridIntervals.setAll([
                { timeUnit: ""day"", count: 7 }
            ]);

            dateAxis.renderer.grid.template.location = 0;
            dateAxis.renderer.minGridDistance = 50;
            dateAxis.renderer.labels.template.loc");
                WriteLiteral(@"ation = 0.0001;

            let label = dateAxis.renderer.labels.template;
            label.wrap = true;
            label.maxWidth = 50;
            label.tooltipText = ""{date}"";

            //label.wrap = true;
            //label.truncate = true;
            //label.maxWidth = 50;
            //dateAxis.max = (new Date(2021, lengthChart, 1)).getTime();

            // Create value axis
            var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());

            valueAxis.numberFormatter = new am4core.NumberFormatter();
            valueAxis.numberFormatter.numberFormat = '$ #,###0.####';

            //valueAxis.title.text = ""Price of TIGE (USD)"";
            //valueAxis.title.fontWeight = ""bold"";

            // Create series
            var series = chart.series.push(new am4charts.LineSeries());
            series.dataFields.valueY = ""price"";
            series.dataFields.dateX = ""Time"";
            series.strokeWidth = 3;
            series.tooltipText = ""{valueY.va");
                WriteLiteral(@"lue}"";
            series.fillOpacity = 0.1;

            // Add cursor
             chart.cursor = new am4charts.XYCursor();
            chart.cursor.xAxis = dateAxis;
            //chart.scrollbarX = new am4core.Scrollbar();

            series.tooltip.getFillFromObject = false;
            series.tooltip.adapter.add(""x"",
                (x, target) => {
                    if (series.tooltip.tooltipDataItem.valueY < 0) {
                        series.tooltip.background.fill = chart.colors.getIndex(4);
                    } else {
                        series.tooltip.background.fill = chart.colors.getIndex(0);
                    }
                    return x;
                });



            chart.responsive.enabled = true;

            chart.responsive.rules.push({
                relevant: function (target) {
                    if (target.pixelWidth <= 600) {

                        return true;
                    }
                    return false;
                ");
                WriteLiteral(@"},
                state: function (target, stateId) {
                    if (target instanceof am4charts.Chart) {
                        var state = target.states.create(stateId);
                        state.properties.paddingTop = 5;
                        state.properties.paddingRight = 15;
                        state.properties.paddingBottom = 5;
                        state.properties.paddingLeft = 0;
                        return state;
                    }
                    return null;
                    return;
                }
            });
        });


    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IConfigurationService ConfigurationService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TIGE.Core.Share.Models.DashboardModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
