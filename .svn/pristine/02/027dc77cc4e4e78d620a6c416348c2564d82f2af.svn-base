#pragma checksum "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d09a0916390c57da9860665e19cd205a8a14b864"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 2 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using TIGE;

#line default
#line hidden
#line 3 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using TIGE.Core;

#line default
#line hidden
#line 4 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using TIGE.Core.Models;

#line default
#line hidden
#line 5 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using TIGE.Models.Constants;

#line default
#line hidden
#line 6 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using Elect.Web.IUrlHelperUtils;

#line default
#line hidden
#line 7 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using TIGE.Areas.Portal.Controllers;

#line default
#line hidden
#line 10 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using Elect.Web.DataTable;

#line default
#line hidden
#line 11 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using Elect.Web.DataTable.Models.Column;

#line default
#line hidden
#line 14 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#line 15 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc;

#line default
#line hidden
#line 16 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc.Rendering;

#line default
#line hidden
#line 17 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#line 18 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http.Extensions;

#line default
#line hidden
#line 1 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
using Elect.Core.ObjUtils;

#line default
#line hidden
#line 2 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
using TIGE.Contract.Service;

#line default
#line hidden
#line 3 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
using TIGE.Core.Share.Utils;

#line default
#line hidden
#line 4 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
using TIGE.Core.Utils;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d09a0916390c57da9860665e19cd205a8a14b864", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"149de2803d438138873c3f8fef1be7010fc8daea", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<TIGE.Core.Share.Models.DashboardModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 7 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home";
    var config = ConfigurationService.GetConfig();
    var tigeHistory = ConfigurationService.GetTigeHistory().ToList();
    var month = DateTime.Now.Month + config.TIGEChartRange;

    var latesPrice = 0d;
    if (tigeHistory.Count > 1)
    {
        var price = tigeHistory.OrderByDescending(x => x.CreatedTime).ToArray();
        latesPrice = price[1].Price;
    }


    var percent = Math.Round( (config.TokenPrice - latesPrice) / latesPrice * 100, 2);
    var color = percent > 0 ? "badge-success" : "badge-danger";
    var arrow = percent > 0 ? "la-arrow-up" : "la-arrow-down";


#line default
#line hidden
            WriteLiteral("\r\n<style>\r\n    #chartdiv {\r\n        width: 100%;\r\n        height: 400px;\r\n    }\r\n\r\n    .chart-label {\r\n        padding-left: 45%;\r\n        color: black;\r\n        padding-top: 15px;\r\n        font-size: 18pt;\r\n    }\r\n\r\n    ");
            WriteLiteral("@media (max-width: 800px) {\r\n        .chart-label {\r\n            padding-left: 25%;\r\n        }\r\n    }\r\n\r\n    ");
            WriteLiteral("@media (max-width: 450px) {\r\n        .chart-label {\r\n            padding-left: 15%;\r\n        }\r\n    }\r\n\r\n    ");
            WriteLiteral(@"@media (max-width: 450px) {
        .chart-label {
            padding-left: 15%;
            font-size: 14pt;
        }
    }

    .chartjs-tooltip {
        border-radius: 5px;
    }
</style>

<div class=""pt-120 pb-120"">
    <div class=""container"">
        <div class=""row justify-content-center"">
            <div class=""col-lg-12"">
                <div class=""row mb-none-30"">

");
#line 70 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                     if (string.IsNullOrWhiteSpace(LoggedInUser.Current.WalletId))
                    {

#line default
#line hidden
            WriteLiteral(@"                    <div class=""col-xl-12 col-sm-12 mb-30"">
                        <div class=""d-widget d-flex flex-wrap"">
                            <div class=""col-8"">
                                <h4 class=""currency-amount"">
                                    You need update full profile to use full functions!
                                </h4>
                            </div>
                            <div class=""col-4"">

                            </div>
                        </div><!-- d-widget-two end -->
                    </div>
");
#line 84 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                    }

#line default
#line hidden
            WriteLiteral(@"
                    <div class=""col-xl-4 col-sm-6 mb-30"">
                        <div class=""d-widget d-flex flex-wrap"">
                            <div class=""col-8"">
                                <span class=""caption"">Balance</span>
                                <h4 class=""currency-amount"">
                                    $ ");
#line 91 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                                  Write(LoggedInUser.Current.WalletBalance > 0 ?
                                            LoggedInUser.Current.WalletBalance.ToString("##,###,###,###0.###")
                                            : "0");

#line default
#line hidden
            WriteLiteral(@"
                                </h4>
                            </div>
                            <div class=""col-4"">
                                <div class=""icon ml-auto"">
                                    <i class=""las la-dollar-sign""></i>
                                </div>
                            </div>
                        </div><!-- d-widget-two end -->
                    </div>
                    <div class=""col-xl-4 col-sm-6 mb-30"">
                        <div class=""d-widget d-flex flex-wrap"">
                            <div class=""col-8"">
                                <span class=""caption"">Total Slots</span>
                                <h4 class=""currency-amount"">");
#line 107 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                                                       Write(Model.TotalSlots);

#line default
#line hidden
            WriteLiteral(@"</h4>
                            </div>
                            <div class=""col-4"">
                                <div class=""icon ml-auto"">
                                    <i class=""las la-wallet""></i>
                                </div>
                            </div>
                        </div><!-- d-widget-two end -->
                    </div>
                    <div class=""col-xl-4 col-sm-6 mb-30"">
                        <div class=""d-widget d-flex flex-wrap"">
                            <div class=""col-8"">
                                <span class=""caption"">Total Tokens (TIGE)</span>
                                <h4 class=""currency-amount"">
                                    ");
#line 121 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                               Write(Model.TotalToken);

#line default
#line hidden
            WriteLiteral("\r\n                                    <span style=\"font-size: 10pt;\">\r\n");
#line 123 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                                          
                                            var totalTokenPrice = Model.TotalToken > 0 ? (Model.TotalToken * config.TokenPrice) : 0;
                                            var rounded = Math.Round(totalTokenPrice, 4);
                                            var text = rounded.ToString("##,###,###,###0.##");
                                        

#line default
#line hidden
            WriteLiteral("                                        ($ ");
#line 128 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                                      Write(text);

#line default
#line hidden
            WriteLiteral(@")
                                    </span>
                            </h4>
                        </div>
                        <div class=""col-4"">
                            <div class=""icon ml-auto"">
                                <i class=""las la-cubes ""></i>
                            </div>
                        </div>
                    </div><!-- d-widget-two end -->
                </div>
                <div class=""col-xl-4 col-sm-6 mb-30"">
                    <div class=""d-widget d-flex flex-wrap"">
                        <div class=""col-8"">
                            <span class=""caption"">Total Commission</span>
                            <h4 class=""currency-amount"">$ ");
#line 143 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                                                     Write(Model.TotalCommission);

#line default
#line hidden
            WriteLiteral(@"</h4>
                        </div>
                        <div class=""col-4"">
                            <div class=""icon ml-auto"">
                                <i class=""las la-credit-card""></i>
                            </div>
                        </div>
                    </div><!-- d-widget-two end -->
                </div>

                <div class=""col-xl-8 col-sm-12 mb-30 non-menu-toggle-li"">
                    <div class=""d-widget d-flex flex-wrap"">
                        <div class=""col-8"">
                            <span class=""caption"">Register Referral Link</span>
                            <h4 class=""currency-amount"">");
#line 157 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                                                    Write(SystemHelper.Setting.ReferFormatLink.Replace("{{code}}", LoggedInUser.Current.Code));

#line default
#line hidden
            WriteLiteral("</h4>\r\n                            <input type=\"hidden\"");
            BeginWriteAttribute("value", " value=\"", 6521, "\"", 6615, 1);
#line 158 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
WriteAttributeValue("", 6529, SystemHelper.Setting.ReferFormatLink.Replace("{{code}}", LoggedInUser.Current.Code), 6529, 86, false);

#line default
#line hidden
            EndWriteAttribute();
            WriteLiteral(@" id=""ref-link"" />
                        </div>
                        <div class=""col-4"">
                            <div class=""icon ml-auto"" style=""cursor: pointer"">
                                <i class=""las la-user-friends"" onclick=""copyTextToClipboard('#ref-link')""></i>
                            </div>
                        </div>
                    </div><!-- d-widget-two end -->
                </div>

                <div class=""col-xl-8 col-sm-12 mb-30 menu-toggle-li"">
                    <div class=""d-widget d-flex flex-wrap"">
                        <div class=""col-8"">
                            <span class=""caption"">Register Referral Link</span>
                            <h4 class=""currency-amount"" onclick=""copyTextToClipboard('#ref-link')"">");
#line 172 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                                                                                               Write(SystemHelper.Setting.ReferFormatLink.Replace("{{code}}", LoggedInUser.Current.Code));

#line default
#line hidden
            WriteLiteral("</h4>\r\n                            <input type=\"hidden\"");
            BeginWriteAttribute("value", " value=\"", 7549, "\"", 7643, 1);
#line 173 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
WriteAttributeValue("", 7557, SystemHelper.Setting.ReferFormatLink.Replace("{{code}}", LoggedInUser.Current.Code), 7557, 86, false);

#line default
#line hidden
            EndWriteAttribute();
            WriteLiteral(" id=\"ref-link\" />\r\n                        </div>\r\n                    </div><!-- d-widget-two end -->\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-50\">\r\n                <div class=\"col-lg-12\">\r\n                    <div");
            BeginWriteAttribute("class", " class=\"", 7894, "\"", 7902, 0);
            EndWriteAttribute();
            WriteLiteral(" style=\"background-color: aliceblue;\">\r\n                        <div class=\"row align-content-center chart-label\">\r\n                            <strong> TIGE $");
#line 182 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                                       Write(config.TokenPrice.ToString("#,###,###0.#####"));

#line default
#line hidden
            WriteLiteral("   </strong>\r\n\r\n                            <span");
            BeginWriteAttribute("class", " class=\"", 8160, "\"", 8180, 2);
            WriteAttributeValue("", 8168, "badge", 8168, 5, true);
#line 184 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
WriteAttributeValue(" ", 8173, color, 8174, 6, false);

#line default
#line hidden
            EndWriteAttribute();
            WriteLiteral(" style=\"margin-left: 15px; padding-top: 12px;\">\r\n                                <i");
            BeginWriteAttribute("class", " class=\"", 8264, "\"", 8282, 2);
            WriteAttributeValue("", 8272, "las", 8272, 3, true);
#line 185 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
WriteAttributeValue(" ", 8275, arrow, 8276, 6, false);

#line default
#line hidden
            EndWriteAttribute();
            WriteLiteral("></i>\r\n                                ");
#line 186 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                           Write(percent);

#line default
#line hidden
            WriteLiteral(" %\r\n                            </span>\r\n                        </div>\r\n\r\n\r\n");
            WriteLiteral("\r\n                        <canvas id=\"myChart\" ></canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
                WriteLiteral("\r\n");
                WriteLiteral("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/chart.min.js\"></script>\r\n\r\n    <script>\r\n\r\n        var dataChart = JSON.parse(\'");
#line 214 "C:\Users\admin\Desktop\fundez\FundezStack\src\Web\TIGE\Views\Home\Index.cshtml"
                               Write(Html.Raw(tigeHistory.ToJsonString()));

#line default
#line hidden
                WriteLiteral(@"');
        var labeldata = [];
        var chrtdata = [];

        for (var i = 0; i < dataChart.length; i++)
        {
            var date = new Date(dataChart[i].createdTime);
            var textDate = moment(date).format('DD-MMM');

            labeldata.push(textDate);
            chrtdata.push( dataChart[i].price);
        }

        var labelChart = ""Price (USD)"";

        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labeldata,
                datasets: [{
                    label: labelChart,
                    data: chrtdata,
                    backgroundColor: [
                        'rgba(63, 106, 227, 0.2)'
                       
                    ],
                    borderColor: [
                        'rgba(63, 106, 227, 1)'
                      
                    ],
                    borderWidth: 1
                }]
");
                WriteLiteral(@"            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            // Include a dollar sign in the ticks
                            callback: function(value, index, values) {
                                return '$ ' + value.toFixed(4);
                            }
                        }
                    }
                },
            
                plugins: {
                    legend: {
                        display: false,
                    },
                    tooltip: {
                        // Disable the on-canvas tooltip
                        enabled: false,

                        external: function (context) {
                            // Tooltip Element
                            var tooltipEl = document.getElementById('chartjs-tooltip');

                            // Create element on first render
                   ");
                WriteLiteral(@"         if (!tooltipEl) {
                                tooltipEl = document.createElement('div');
                                tooltipEl.id = 'chartjs-tooltip';
                                tooltipEl.innerHTML = '<table></table>';
                                document.body.appendChild(tooltipEl);
                            }

                            // Hide if no tooltip
                            var tooltipModel = context.tooltip;
                            if (tooltipModel.opacity === 0) {
                                tooltipEl.style.opacity = 0;
                                return;
                            }

                            // Set caret Position
                            tooltipEl.classList.remove('above', 'below', 'no-transform');
                            if (tooltipModel.yAlign) {
                                tooltipEl.classList.add(tooltipModel.yAlign);
                            } else {
                                tooltipEl.cla");
                WriteLiteral(@"ssList.add('no-transform');
                            }

                            function getBody(bodyItem) {
                                return bodyItem.lines;
                            }

                            // Set Text
                            if (tooltipModel.body) {
                                var titleLines = tooltipModel.title || [];
                                var bodyLines = tooltipModel.body.map(getBody);

                                var innerHtml = '<thead>';

                                titleLines.forEach(function (title) {
                                    innerHtml += '<tr><th>' + title + "" "" + moment().year() + ' </th></tr>';
                                });
                                innerHtml += '</thead><tbody>';

                                bodyLines.forEach(function (body, i) {

                                    var value = body[0].replace(labelChart, """").replace("": "", """");

                                    va");
                WriteLiteral(@"r colors = tooltipModel.labelColors[i];
                                    var style = 'background:' + "" black"";
                                    style += '; border-color:' + colors.borderColor;
                                    style += '; border-width: 2px';
                                    var span = '<span style=""' + style + '""></span>';
                                    innerHtml += '<tr><td>' + span + labelChart + "": "" + parseFloat(value).toFixed(4) + '</td></tr>';
                                   
                                });
                                innerHtml += '</tbody>';

                                var tableRoot = tooltipEl.querySelector('table');
                                tableRoot.innerHTML = innerHtml;
                            }

                            var position = context.chart.canvas.getBoundingClientRect();
                            var bodyFont = Chart.helpers.toFont(tooltipModel.options.bodyFont);

                          ");
                WriteLiteral(@"  // Display, position, and set styles for font
                            tooltipEl.style.opacity = 1;
                            tooltipEl.style.position = 'absolute';
                            tooltipEl.style.left = position.left + window.pageXOffset + tooltipModel.caretX + 'px';
                            tooltipEl.style.top = position.top + window.pageYOffset + tooltipModel.caretY + 'px';
                            tooltipEl.style.font = bodyFont.string;
                            tooltipEl.style.padding = tooltipModel.padding + 'px ' + tooltipModel.padding + 'px';
                            tooltipEl.style.pointerEvents = 'none';
                            tooltipEl.style.backgroundColor = 'black';
                            tooltipEl.style.border = ""2px solid black"";
                        },
                        callbacks: {
                            labelColor: function(tooltipItem, chart) {
                                return {
                                    bac");
                WriteLiteral(@"kgroundColor: 'rgb(255, 0, 0)'
                                }
                            }
                        },
                        backgroundColor: '#227799'
                    }
                }
            }
        });


    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IConfigurationService ConfigurationService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TIGE.Core.Share.Models.DashboardModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
